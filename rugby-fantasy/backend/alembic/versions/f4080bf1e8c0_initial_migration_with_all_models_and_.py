"""Initial migration with all models and relationships

Revision ID: f4080bf1e8c0
Revises: 
Create Date: 2025-10-06 21:31:51.956892

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f4080bf1e8c0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('competition',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_competition_name'), 'competition', ['name'], unique=True)
    op.create_table('player',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('position', sa.String(length=32), nullable=False),
    sa.Column('nation', sa.String(length=32), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_name'), 'player', ['name'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('competition_round',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('transfer_deadline', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('league',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('join_code', sa.String(length=32), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_league_join_code'), 'league', ['join_code'], unique=True)
    op.create_index(op.f('ix_league_name'), 'league', ['name'], unique=True)
    op.create_table('league_membership',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('position_in_league', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['league_id'], ['league.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('round_stats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('competition_round_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('tries', sa.Integer(), nullable=False),
    sa.Column('conversions', sa.Integer(), nullable=False),
    sa.Column('penalties', sa.Integer(), nullable=False),
    sa.Column('drop_goals', sa.Integer(), nullable=False),
    sa.Column('tackles', sa.Integer(), nullable=False),
    sa.Column('turnovers', sa.Integer(), nullable=False),
    sa.Column('lineout_wins', sa.Integer(), nullable=False),
    sa.Column('minutes_played', sa.Integer(), nullable=False),
    sa.Column('yellow_cards', sa.Integer(), nullable=False),
    sa.Column('red_cards', sa.Integer(), nullable=False),
    sa.Column('fantasy_points', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_round_id'], ['competition_round.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('squad',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('league_member_id', sa.Integer(), nullable=False),
    sa.Column('captain_id', sa.Integer(), nullable=True),
    sa.Column('vice_captain_id', sa.Integer(), nullable=True),
    sa.Column('kicker_id', sa.Integer(), nullable=True),
    sa.Column('backup_kicker_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['backup_kicker_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['captain_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['kicker_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['league_member_id'], ['league_membership.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vice_captain_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('squad_player',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('squad_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('is_starter', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['squad_id'], ['squad.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transfer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('squad_id', sa.Integer(), nullable=False),
    sa.Column('competition_round_id', sa.Integer(), nullable=False),
    sa.Column('player_in_id', sa.Integer(), nullable=False),
    sa.Column('player_out_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['competition_round_id'], ['competition_round.id'], ),
    sa.ForeignKeyConstraint(['player_in_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['player_out_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['squad_id'], ['squad.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transfer')
    op.drop_table('squad_player')
    op.drop_table('squad')
    op.drop_table('round_stats')
    op.drop_table('league_membership')
    op.drop_index(op.f('ix_league_name'), table_name='league')
    op.drop_index(op.f('ix_league_join_code'), table_name='league')
    op.drop_table('league')
    op.drop_table('competition_round')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_player_name'), table_name='player')
    op.drop_table('player')
    op.drop_index(op.f('ix_competition_name'), table_name='competition')
    op.drop_table('competition')
    # ### end Alembic commands ###
